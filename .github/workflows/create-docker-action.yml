name: Create and publish a Docker image

on:
  push:
    branches: ['master', 'feature/*']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  TESTING: true
  PB_ENABLED: false
  SQLALCHEMY_DATABASE_URI: "postgresql://postgres:@postgres:5432/crc_test"

jobs:
  run_tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ''
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/setup-python@v3
        with:
          python-version: '3.9'
          architecture: 'x64'

      - run: psql -h postgres -c 'create database crc_test;' -U postgres
      - run: pipenv install --dev
      - run: pipenv run coverage run -m pytest
      - run: pipenv run coverage xml -i

  build-and-push-image:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
